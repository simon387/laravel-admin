# testing the API


### register an user
POST {{api}}register
X-Requested-With: XMLHttpRequest
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Disposition: form-data; name="first_name"
Content-Type: text/plain

Simone
--WebAppBoundary
Content-Disposition: form-data; name="last_name"
Content-Type: text/plain

Celia
--WebAppBoundary
Content-Disposition: form-data; name="email"
Content-Type: text/plain

simone.celia@simonecelia.it
--WebAppBoundary
Content-Disposition: form-data; name="password"
Content-Type: text/plain

pass
--WebAppBoundary
Content-Disposition: form-data; name="password_confirm"
Content-Type: text/plain

pass
--WebAppBoundary

### login
POST {{api}}login
X-Requested-With: XMLHttpRequest
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Disposition: form-data; name="email"
Content-Type: text/plain

admin@admin.com
--WebAppBoundary
Content-Disposition: form-data; name="password"
Content-Type: text/plain

password
--WebAppBoundary

### get authenticated user (with cookie from the login call)
GET {{api}}user
X-Requested-With: XMLHttpRequest
Cookie: Authorization=3|pKpl09u3Bk4PMOeigisvOs3frpuQyqAtW3Jg3CdT;

### logout
POST {{api}}logout
X-Requested-With: XMLHttpRequest
Cookie: Authorization=3|pKpl09u3Bk4PMOeigisvOs3frpuQyqAtW3Jg3CdT;

### get all users
GET {{api}}users?page=0

### create an user
POST {{api}}users
X-Requested-With: XMLHttpRequest
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Disposition: form-data; name="first_name"
Content-Type: text/plain

primo nome
--WebAppBoundary
Content-Disposition: form-data; name="last_name"
Content-Type: text/plain

cognome
--WebAppBoundary
Content-Disposition: form-data; name="email"
Content-Type: text/plain

email@provider.it
--WebAppBoundary

### get an user by id
GET {{api}}users/1

### update an user by id
PUT {{api}}users/6
Content-Type: application/x-www-form-urlencoded

first_name=mod&last_name=cognomeMod&email=email@mod.it

### delete an user by id
DELETE {{api}}users/6

### update current user info
PUT {{api}}users/info
Content-Type: application/x-www-form-urlencoded

first_name=simone_updated

### update current user password
PUT {{api}}users/password
Content-Type: application/x-www-form-urlencoded

password=pass&password_confirm=pass

### get all the roles
GET {{api}}roles

### detail on single role
GET {{api}}roles/1

### create a role
POST {{api}}roles
Content-Type: application/json

{
	"name": "test",
	"permissions": [1, 2, 3]
}

### update a role
PUT {{api}}roles/4
Content-Type: application/json

{
	"name": "test",
	"permissions": [1, 3]
}

### get all products
GET {{api}}products

### get a single product
GET {{api}}products/1

### create a product
POST {{api}}products
Content-Type: application/json

{
	"title": "product",
	"description": "description",
	"image": "image",
	"price": 20
}

### update a product
PUT {{api}}products/31
Content-Type: application/json

{
	"title": "product new",
	"description": "description new",
	"image": "image new",
	"price": 42
}

### upload an image
POST {{api}}upload
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="image"; filename="simonecelia.png"

// The 'input.txt' file will be uploaded
< /dev/laravel-admin/test_api/simonecelia.png
--boundary

### get the uploaded image
GET {{localhost}}images/ep5Jy27aEZ.png

### get the orders
GET {{api}}orders?page=1

### get a single order
GET {{api}}orders/1

### export to csv
POST {{api}}export

### get the chart data
GET {{api}}chart

